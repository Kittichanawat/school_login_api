// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SchLoginUsers {
  user_id   Int         @id @default(autoincrement())
  username  String      @unique
  user_nat_id  String?        @unique                    
  password  String
  user_fname  String?
  user_lname  String?
  user_email  String?
  user_phone  String?
  login_status Int @default(1)
 
  SchParents SchParents[]
  SchTeachers SchTeachers[]
  SchAdmins SchAdmins[]
  SchExecutives SchExecutives[]
  SchRegistrars SchRegistrars[]
  SchStudents SchStudents[]
  userAddresses UserAddress[]
}



model SchParents {
  par_id       Int           @id @default(autoincrement())
  user_id      Int?
  par_status       Int           @default(1)

  user         SchLoginUsers? @relation(fields: [user_id], references: [user_id])
  SchParentStudent SchParentStudent[]
}

model SchTeachers {
  tea_id      Int           @id @default(autoincrement())

  user_id     Int?
  tea_status  Int           @default(1)

  user        SchLoginUsers? @relation(fields: [user_id], references: [user_id])
  SchTeacherClass SchTeacherClass[]
  SchAttendance SchAttendance[]
  SchBehaviors SchBehaviors[]
}

model SchAdmins {
  adm_id     Int           @id @default(autoincrement())
  user_id    Int?
  adm_status Int           @default(1)

  user       SchLoginUsers? @relation(fields: [user_id], references: [user_id])
}

model SchExecutives {
  exec_id     Int           @id @default(autoincrement()) @map("exec_id") // Primary Key, Auto Increment
                       // นามสกุลผู้บริหาร
  position    String        @map("position")                             // ตำแหน่ง เช่น ผู้อำนวยการ
                   // เบอร์โทร (Nullable)
  user_id     Int?          @map("user_id")                              // user_id ที่เชื่อมไปยังตาราง Login Users
  exec_status Int           @default(1)                                  // สถานะ (1 = Active, 0 = Inactive)

  user        SchLoginUsers? @relation(fields: [user_id], references: [user_id]) // ความสัมพันธ์ไปยัง Login Users (ถ้ามี)
}

model SchRegistrars {
  reg_id      Int           @id @default(autoincrement()) @map("reg_id") // Primary Key, Auto Increment

  user_id     Int?          @map("user_id")                             // user_id ที่เชื่อมไปยังตาราง Login Users
  reg_status  Int           @default(1)                                 // สถานะ (1 = Active, 0 = Inactive)

  user        SchLoginUsers? @relation(fields: [user_id], references: [user_id]) // ความสัมพันธ์ไปยัง Login Users (ถ้ามี)
}


model SchStudents {
  std_id     Int           @id @default(autoincrement()) @map("std_id") // Primary Key, Auto Increment
  std_code   String        @unique                     // รหัสประจำตัวนักเรียน
  std_gend String        @map("std_gend")                            // เพศ (male, female)
  std_dob    DateTime?     @map("std_dob")                               // วันเกิด
  class_id   Int?          @map("class_id")                          // รหัสห้องเรียน (Nullable)
  user_id    Int?          @map("user_id")                           // user_id ที่เชื่อมไปยัง Login Users
  status     Int           @default(1)                              // สถานะ (1 = Active, 0 = Inactive)
  std_state  String        @default("normal")           // สถานะการศึกษา

  class      SchClasses?   @relation(fields: [class_id], references: [class_id]) // ความสัมพันธ์กับห้องเรียน
  user       SchLoginUsers? @relation(fields: [user_id], references: [user_id]) // ความสัมพันธ์กับ Login Users
  SchParentStudent SchParentStudent[]
  SchGrades SchGrades[]
  SchAttendance SchAttendance[]
  SchBehaviors SchBehaviors[]
}

model SchClasses {
  class_id     Int    @id @default(autoincrement()) @map("class_id") // Primary Key, Auto Increment
  class_level  String? @map("class_level") @unique                    // ชื่อห้องเรียน
  class_room   String? @map("class_room") @unique                    // ห้องเรียน
  class_status Int    @default(1) @map("class_status")            // สถานะห้องเรียน (1 = Active, 0 = Inactive)
  students SchStudents[]
  SchTeacherClass SchTeacherClass[]
  SchAttendance SchAttendance[]
}

model SchTeacherClass {
  teaclas_id Int           @id @default(autoincrement()) // Primary Key, Auto Increment
  tea_id     Int           // รหัสครู
  class_id   Int?          // รหัสห้องเรียน (Nullable)
  term_id    Int           // รหัสภาคเรียน

  teacher    SchTeachers   @relation(fields: [tea_id], references: [tea_id]) // ความสัมพันธ์กับตาราง SchTeachers
  class      SchClasses?   @relation(fields: [class_id], references: [class_id]) // ความสัมพันธ์กับตาราง SchClasses
  term       SchTerms      @relation(fields: [term_id], references: [term_id]) // ความสัมพันธ์กับตาราง SchTerms
}

model SchTerms {
  term_id       Int      @id @default(autoincrement()) // Primary Key, Auto Increment
  term_name     String   // ชื่อเทอม
  academic_year String   // ปีการศึกษา (เช่น "2024")
  term_status   String   // สถานะ (active/inactive)
  is_deleted    Boolean  @default(false) // สถานะการลบ (0 = ไม่ลบ, 1 = ลบ)
  SchTeacherClass SchTeacherClass[]
  SchGrades SchGrades[]
  SchAttendance SchAttendance[]
}

model SchParentStudent {
  parstd_id Int           @id @default(autoincrement()) // Primary Key, Auto Increment
  par_id    Int           // รหัสผู้ปกครอง
  std_id    Int           // รหัสนักเรียน

  parent    SchParents    @relation(fields: [par_id], references: [par_id]) // ความสัมพันธ์กับตาราง SchParents
  student   SchStudents   @relation(fields: [std_id], references: [std_id]) // ความสัมพันธ์กับตาราง SchStudents


}
model SchGrades {
  grd_id        Int       @id @default(autoincrement()) // Primary Key, Auto Increment
  std_id        Int       // รหัสนักเรียน
  file_path     String    // ที่อยู่ไฟล์ (เช่น URL หรือ Path)
  uploaded_date DateTime  // วันที่อัปโหลด
  term_id       Int?      // รหัสเทอม (Nullable)
  grd_status    Int       @default(1) // สถานะ (1 = Active, 0 = Inactive)

  student       SchStudents @relation(fields: [std_id], references: [std_id]) // ความสัมพันธ์กับตาราง SchStudents
  term          SchTerms?    @relation(fields: [term_id], references: [term_id]) // ความสัมพันธ์กับตาราง SchTerms


}

model SchAttendance {
 atd_id     Int      @id @default(autoincrement())
 std_id     Int?     
 class_id   Int?     
 tea_id     Int      
 term_id    Int      
 atd_date   DateTime @db.Date
 atd_status Int      @default(1)
  // Relations
 student    SchStudents?    @relation(fields: [std_id], references: [std_id])
 class      SchClasses?       @relation(fields: [class_id], references: [class_id])
 teacher    SchTeachers     @relation(fields: [tea_id], references: [tea_id])
 term       SchTerms         @relation(fields: [term_id], references: [term_id])

}

model SchAddress {
  addr_id          Int       @id @default(autoincrement())  // Primary Key
  addr_etc         String                                 // อื่นๆ
  addr_sub_dist    String                                 // ตำบล
  addr_dist        String                                 // อำเภอ
  addr_prv        String                                 // จังหวัด
  addr_pos_code    String                                 // รหัสไปรษณีย์
  addr_tel_home    String?                                // โทรศัพท์บ้าน (nullable)
  house_reg_num    String?                                // เลขทะเบียนบ้าน (nullable)

  userAddresses    UserAddress[]
}

model UserAddress {
  user_addr_id     Int          @id @default(autoincrement())  // Primary Key
  user_id          Int                                         // เชื่อมกับ user_id
  addr_id          Int                                         // เชื่อมกับ addr_id
  addr_type     String @default("current")             // ประเภทที่อยู่

  user             SchLoginUsers @relation(fields: [user_id], references: [user_id])  // ความสัมพันธ์กับ SchLoginUsers
  address          SchAddress    @relation(fields: [addr_id], references: [addr_id])  // ความสัมพันธ์กับ SchAddress
}
model SchBehaviors {
  bhv_id         Int       @id @default(autoincrement())  // Primary Key
  std_id         Int                                      // รหัสนักเรียน
  bhv_type       String                                   // ประเภทพฤติกรรม
  bhv_desc       String?                                  // รายละเอียดพฤติกรรม (nullable)
  reported_date  DateTime                                 // วันที่รายงาน
  tea_id         Int                                      // รหัสครู
  bhv_status     Int       @default(1)                   // สถานะ (1 = Active, 0 = Inactive)

  // Relations
  student        SchStudents @relation(fields: [std_id], references: [std_id])  // ความสัมพันธ์กับ SchStudents
  teacher        SchTeachers @relation(fields: [tea_id], references: [tea_id]) // ความสัมพันธ์กับ SchTeachers
}











